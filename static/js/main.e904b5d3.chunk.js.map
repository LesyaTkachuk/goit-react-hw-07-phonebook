{"version":3,"sources":["components/ThemeToggler/ThemeToggler.module.scss","components/ContactForm/ContactForm.module.scss","common/Layout/Layout.module.scss","components/ComtactList/ContactList.module.scss","common/Section/Section.module.scss","components/Filter/Filter.module.scss","components/ContactListItem/ContactListItem.module.scss","modules/contacts/contactsActions.js","modules/contacts/contactsReducer.js","modules/theme/themeActions.js","modules/theme/themeReducer.js","modules/store.js","modules/theme/themeSelectors.js","common/Layout/Layout.js","common/Section/Section.js","modules/contacts/contactsSelectors.js","modules/contacts/contactsOperations.js","components/ContactForm/ContactForm.js","components/ContactForm/ContactFormContainer.js","components/Filter/Filter.js","components/Filter/FilterContainer.js","common/Spinner/Spinner.js","components/ContactListItem/ContactListItem.js","components/ContactListItem/ContactListItemContainer.js","components/ComtactList/ContactList.js","components/ComtactList/ContactListContainer.js","components/ThemeToggler/ThemeToggler.js","components/ThemeToggler/ThemeTogglerContainer.js","common/Notification.js","components/App.js","index.js"],"names":["module","exports","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","toggleError","initialState","items","filter","isLoading","error","createReducer","contactsActions","state","payload","id","_","loading","combineReducers","toggleTheme","themeReducer","isChecked","store","configureStore","reducer","contacts","contactsReducer","themeToggler","getThemeToggler","connect","children","className","styles","layout","dark","light","container","Section","title","section","getContacts","getFilter","getError","getLoading","getVisibleContacts","createSelector","name","toLowerCase","includes","getContactById","contactId","find","axios","defaults","baseURL","dispatch","get","then","data","catch","message","addContact","number","post","deleteContact","delete","ContactForm","handleChange","e","target","value","setState","handleSubmit","preventDefault","checkContact","props","showNotif","hasContact","someName","some","contact","this","onSubmit","form","label","type","onChange","input","button","Component","mapDispatchToProps","contactsOperations","contactsSelectors","Filter","onChangeFilter","length","Spinner","color","height","width","timeout","ContactListItem","onClickDelete","key","item","onClick","ownProps","ContactList","useEffect","list","list__dark","list__light","map","ThemeToggler","onThemeToggle","themeSwitch","themeSwitch_container","aria-hidden","data-prefix","data-icon","role","xmlns","viewBox","themeSwitch__icon","fill","d","switch","switch__input","checked","switch__label","htmlFor","switch__marker","Notification","toast","setTimeout","position","autoClose","hideProgressBar","closeOnClick","rtl","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e904b5d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeSwitch\":\"ThemeToggler_themeSwitch__20CFH\",\"themeSwitch_container\":\"ThemeToggler_themeSwitch_container__3qS8Y\",\"themeSwitch__icon\":\"ThemeToggler_themeSwitch__icon__301SI\",\"switch\":\"ThemeToggler_switch__34P_C\",\"switch__input\":\"ThemeToggler_switch__input__1DETX\",\"switch__label\":\"ThemeToggler_switch__label__1x0wu\",\"switch__marker\":\"ThemeToggler_switch__marker__3xRSn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2-QI3\",\"label\":\"ContactForm_label__3grAE\",\"input\":\"ContactForm_input__1MfPb\",\"button\":\"ContactForm_button__1M-aE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__3RLVn\",\"container\":\"Layout_container__1Dtq9\",\"light\":\"Layout_light__3k1EY\",\"dark\":\"Layout_dark__1-yQW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3afR0\",\"list__light\":\"ContactList_list__light__3-4o5\",\"list__dark\":\"ContactList_list__dark__3VFXz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__drjhT\",\"title\":\"Section_title__2W19X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3lZe3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__3pB36\",\"name\":\"ContactListItem_name__1df4F\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst getContactsRequest = createAction(\"contacts/getRequest\");\r\nconst getContactsSuccess = createAction(\"contacts/getSuccess\");\r\nconst getContactsError = createAction(\"contacts/getError\");\r\n\r\nconst addContactRequest = createAction(\"contacts/addRequest\");\r\nconst addContactSuccess = createAction(\"contacts/addSuccess\");\r\nconst addContactError = createAction(\"contacts/addError\");\r\n\r\nconst deleteContactRequest = createAction(\"contacts/deleteRequest\");\r\nconst deleteContactSuccess = createAction(\"contacts/deleteSuccess\");\r\nconst deleteContactError = createAction(\"contacts/deleteError\");\r\n\r\nconst filterContacts = createAction(\"contacts/filter\");\r\n\r\nconst toggleError = createAction(\"contacts/toggleError\");\r\n\r\nexport default {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  filterContacts,\r\n  toggleError,\r\n};\r\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\r\nimport contactsActions from \"./contactsActions\";\r\n\r\nconst initialState = {\r\n  contacts: {\r\n    items: [],\r\n    filter: \"\",\r\n    isLoading: false,\r\n    error: \"\",\r\n  },\r\n};\r\n\r\nconst getContacts = (state, { payload }) => {\r\n  return [...payload, ...state];\r\n};\r\nconst addContact = (state, { payload }) => [payload, ...state];\r\nconst deleteContact = (state, { payload }) =>\r\n  state.filter(({ id }) => id !== payload);\r\n\r\nconst items = createReducer(initialState.contacts.items, {\r\n  [contactsActions.getContactsSuccess]: getContacts,\r\n  [contactsActions.addContactSuccess]: addContact,\r\n  [contactsActions.deleteContactSuccess]: deleteContact,\r\n});\r\n\r\nconst filter = createReducer(initialState.contacts.filter, {\r\n  [contactsActions.filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(initialState.contacts.isLoading, {\r\n  [contactsActions.getContactsRequest]: () => true,\r\n  [contactsActions.getContactsSuccess]: () => false,\r\n  [contactsActions.getContactsError]: () => false,\r\n\r\n  [contactsActions.addContactRequest]: () => true,\r\n  [contactsActions.addContactSuccess]: () => false,\r\n  [contactsActions.addContactError]: () => false,\r\n\r\n  [contactsActions.deleteContactRequest]: () => true,\r\n  [contactsActions.deleteContactSuccess]: () => false,\r\n  [contactsActions.deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(initialState.contacts.error, {\r\n  [contactsActions.getContactsError]: (_, { payload }) => payload,\r\n  [contactsActions.addContactError]: (_, { payload }) => payload,\r\n  [contactsActions.deleteContactError]: (_, { payload }) => payload,\r\n  [contactsActions.toggleError]: () => \"\",\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const toggleTheme = createAction(\"theme/toggle\");\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { toggleTheme } from \"./themeActions\";\r\n\r\nconst initialState = {\r\n  themeToggler: {\r\n    isChecked: false,\r\n  },\r\n};\r\n\r\nexport const themeReducer = createReducer(initialState.themeToggler, {\r\n  [toggleTheme]: (state, { payload }) => ({ isChecked: payload }),\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\nimport { themeReducer } from \"./theme/themeReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    themeToggler: themeReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","export const getThemeToggler = (state) => state.themeToggler.isChecked;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getThemeToggler } from \"../../modules/theme/themeSelectors\";\r\nimport styles from \"./Layout.module.scss\";\r\n\r\nfunction Layout({ children, isChecked }) {\r\n  return (\r\n    <div\r\n      className={`${styles.layout} ${isChecked ? styles.dark : styles.light}`}\r\n    >\r\n      <div className={styles.container}> {children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node,\r\n  isChecked: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isChecked: getThemeToggler(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Section.module.scss\";\r\n\r\nfunction Section({ title, children, error }) {\r\n  return (\r\n    <section className={styles.section}>\r\n      {title && <h2 className={styles.title}>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getContacts = (state) => state.contacts.items;\r\nconst getFilter = (state) => state.contacts.filter;\r\nconst getError = (state) => state.contacts.error;\r\nconst getLoading = (state) => state.contacts.loading;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) =>\r\n    contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase())\r\n    )\r\n);\r\n\r\nconst getContactById = createSelector(\r\n  [(_, id) => id, getContacts],\r\n  (contactId, contacts) => contacts.find(({ id }) => id === contactId)\r\n);\r\n\r\nexport default {\r\n  getContacts,\r\n  getFilter,\r\n  getError,\r\n  getLoading,\r\n  getVisibleContacts,\r\n  getContactById,\r\n};\r\n","import axios from \"axios\";\r\nimport contactsActions from \"./contactsActions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3003\";\r\n\r\nconst getContacts = () => (dispatch) => {\r\n  dispatch(contactsActions.getContactsRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(contactsActions.getContactsSuccess(data)))\r\n    .catch(({ message }) =>\r\n      dispatch(contactsActions.getContactsError(message))\r\n    );\r\n};\r\n\r\nconst addContact = (name, number) => (dispatch) => {\r\n  dispatch(contactsActions.addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", { name, number })\r\n    .then(({ data }) => dispatch(contactsActions.addContactSuccess(data)))\r\n    .catch(({ message }) => dispatch(contactsActions.addContactError(message)));\r\n};\r\n\r\nconst deleteContact = (id) => (dispatch) => {\r\n  dispatch(contactsActions.deleteContactRequest(id));\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(contactsActions.deleteContactSuccess(id)))\r\n    .catch(({ message }) =>\r\n      dispatch(contactsActions.deleteContactError(message))\r\n    );\r\n};\r\n\r\nexport default {\r\n  getContacts,\r\n  addContact,\r\n  deleteContact,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./ContactForm.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    showNotif: PropTypes.func.isRequired,\r\n    addContact: PropTypes.func.isRequired,\r\n    contacts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      })\r\n    ).isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    const { name, number } = this.state;\r\n    e.preventDefault();\r\n\r\n    this.checkContact(name, number);\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  checkContact = (name, number) => {\r\n    const { showNotif, addContact } = this.props;\r\n\r\n    if (name === \"\") {\r\n      showNotif(\"Please enter some information\");\r\n      return;\r\n    }\r\n    if (number === \"\") {\r\n      showNotif(\"Please enter contact phone number\");\r\n      return;\r\n    }\r\n\r\n    this.hasContact(name)\r\n      ? showNotif(`${name} is already in contacts`)\r\n      : addContact(name, number);\r\n  };\r\n\r\n  hasContact = (someName) =>\r\n    this.props.contacts.some((contact) => contact.name === someName);\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Phone\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={styles.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default ContactForm;\r\n","import { connect } from \"react-redux\";\r\nimport contactsSelectors from \"../../modules/contacts/contactsSelectors\";\r\nimport contactsActions from \"../../modules/contacts/contactsActions\";\r\nimport contactsOperations from \"../../modules/contacts/contactsOperations\";\r\nimport ContactForm from \"./ContactForm\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactsSelectors.getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  showNotif: contactsActions.addContactError,\r\n  addContact: contactsOperations.addContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport styles from \"./Filter.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Filter({ contacts, filter, onChangeFilter }) {\r\n  return (\r\n    <>\r\n      {contacts.length > 1 && (\r\n        <label className={styles.label}>\r\n          Find contact by name\r\n          <input\r\n            type=\"text\"\r\n            value={filter}\r\n            onChange={(e) => onChangeFilter(e.target.value)}\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\nexport default Filter;\r\n","import { connect } from \"react-redux\";\r\nimport contactsActions from \"../../modules/contacts/contactsActions\";\r\nimport contactsSelectors from \"../../modules/contacts/contactsSelectors\";\r\nimport Filter from \"./Filter\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactsSelectors.getContacts(state),\r\n  filter: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactsActions.filterContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst Spinner = () => (\r\n  <Loader\r\n    type=\"Puff\"\r\n    color=\"#00BFFF\"\r\n    height={100}\r\n    width={100}\r\n    timeout={3000} //3 secs\r\n  />\r\n);\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactListItem.module.scss\";\r\n\r\nfunction ContactListItem({ id, name, number, onClickDelete }) {\r\n  return (\r\n    <li key={id} className={styles.item}>\r\n      <span className={styles.name}>{name}: </span>\r\n      <span>{number}</span>\r\n      <button type=\"button\" onClick={onClickDelete}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\nContactListItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onClickDelete: PropTypes.func.isRequired,\r\n};\r\nexport default ContactListItem;\r\n","import { connect } from \"react-redux\";\r\nimport contactsOperations from \"../../modules/contacts/contactsOperations\";\r\nimport contactsSelectors from \"../../modules/contacts/contactsSelectors\";\r\nimport ContactListItem from \"./ContactListItem\";\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const item = contactsSelectors.getContactById(state, ownProps.id);\r\n  return { ...item };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onClickDelete: () => dispatch(contactsOperations.deleteContact(ownProps.id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Spinner from \"../../common/Spinner/Spinner\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItemContainer\";\r\n\r\nimport styles from \"./ContactList.module.scss\";\r\n\r\nfunction ContactList({ contacts, isLoading, isChecked, getContacts }) {\r\n  useEffect(() => {\r\n    getContacts();\r\n  }, [getContacts]);\r\n  return (\r\n    <>\r\n      {isLoading && <Spinner />}\r\n      {contacts.length > 0 && (\r\n        <ul\r\n          className={`${styles.list} ${\r\n            isChecked ? styles.list__dark : styles.list__light\r\n          }`}\r\n        >\r\n          {contacts.map(({ id }) => (\r\n            <ContactListItem key={id} id={id} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n\r\n  isLoading: PropTypes.bool.isRequired,\r\n  isChecked: PropTypes.bool.isRequired,\r\n  getContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { connect } from \"react-redux\";\r\nimport { getThemeToggler } from \"../../modules/theme/themeSelectors\";\r\nimport contactsSelectors from \"../../modules/contacts/contactsSelectors\";\r\nimport contactsOperations from \"../../modules/contacts/contactsOperations\";\r\nimport ContactList from \"./ContactList\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactsSelectors.getVisibleContacts(state),\r\n  isLoading: contactsSelectors.getLoading(state),\r\n  isChecked: getThemeToggler(state),\r\n});\r\nconst mapDispatchToProps = {\r\n  getContacts: contactsOperations.getContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ThemeToggler.module.scss\";\r\n\r\nconst ThemeToggler = ({ isChecked, onThemeToggle }) => {\r\n  return (\r\n    <div className={styles.themeSwitch}>\r\n      <div className={styles.themeSwitch_container}>\r\n        <svg\r\n          aria-hidden=\"true\"\r\n          data-prefix=\"fas\"\r\n          data-icon=\"sun\"\r\n          role=\"img\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 512 512\"\r\n          className={styles.themeSwitch__icon}\r\n        >\r\n          <path\r\n            fill=\"currentColor\"\r\n            d=\"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\"\r\n          ></path>\r\n        </svg>\r\n\r\n        <div className={styles.switch}>\r\n          <input\r\n            className={styles.switch__input}\r\n            type=\"checkbox\"\r\n            name=\"theme\"\r\n            id=\"theme-switch-control\"\r\n            checked={isChecked}\r\n            onChange={() => onThemeToggle(!isChecked)}\r\n          />\r\n          <label\r\n            aria-hidden=\"true\"\r\n            className={styles.switch__label}\r\n            htmlFor=\"theme-switch-control\"\r\n          >\r\n            On\r\n          </label>\r\n          <div aria-hidden=\"true\" className={styles.switch__marker}></div>\r\n        </div>\r\n\r\n        <svg\r\n          aria-hidden=\"true\"\r\n          data-prefix=\"fas\"\r\n          data-icon=\"moon\"\r\n          role=\"img\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 512 512\"\r\n          className={styles.themeSwitch__icon}\r\n        >\r\n          <path\r\n            fill=\"currentColor\"\r\n            d=\"M283.211 512c78.962 0 151.079-35.925 198.857-94.792 7.068-8.708-.639-21.43-11.562-19.35-124.203 23.654-238.262-71.576-238.262-196.954 0-72.222 38.662-138.635 101.498-174.394 9.686-5.512 7.25-20.197-3.756-22.23A258.156 258.156 0 0 0 283.211 0c-141.309 0-256 114.511-256 256 0 141.309 114.511 256 256 256z\"\r\n          ></path>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nThemeToggler.propTypes = {\r\n  isChecked: PropTypes.bool.isRequired,\r\n  onThemeToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ThemeToggler;\r\n","import { connect } from \"react-redux\";\r\nimport { toggleTheme } from \"../../modules/theme/themeActions\";\r\nimport { getThemeToggler } from \"../../modules/theme/themeSelectors\";\r\nimport ThemeToggler from \"./ThemeToggler\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isChecked: getThemeToggler(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onThemeToggle: toggleTheme,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeToggler);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsSelectors from \"../modules/contacts/contactsSelectors\";\r\nimport contactsActions from \"../modules/contacts/contactsActions\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nclass Notification extends Component {\r\n  static propTypes = {\r\n    error: PropTypes.string.isRequired,\r\n    toggleError: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { error } = this.props;\r\n    toast(`🦄 ${error}`);\r\n    setTimeout(() => {\r\n      this.props.toggleError();\r\n    }, 5000);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        closeOnClick\r\n        rtl={false}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: contactsSelectors.getError(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  toggleError: contactsActions.toggleError,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Notification);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Layout from \"../common/Layout/Layout\";\r\nimport Section from \"../common/Section/Section\";\r\nimport ContactForm from \"./ContactForm/ContactFormContainer\";\r\nimport Filter from \"./Filter/FilterContainer\";\r\nimport ContactList from \"./ComtactList/ContactListContainer\";\r\nimport ThemeToggler from \"./ThemeToggler/ThemeTogglerContainer\";\r\n\r\nimport Notification from \"../common/Notification\";\r\n\r\nconst App = ({ error }) => {\r\n  return (\r\n    <Layout>\r\n      <ThemeToggler />\r\n      <Section title=\"Phonebook\">\r\n        <ContactForm />\r\n      </Section>\r\n      <Section title=\"Contacts\">\r\n        <Filter />\r\n        <ContactList />\r\n      </Section>\r\n      {error && <Notification />}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nApp.propTypes = {\r\n  error: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: state.contacts.error,\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./modules/store\";\n\nimport App from \"./components/App\";\nimport \"./assets/base.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}